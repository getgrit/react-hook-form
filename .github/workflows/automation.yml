name: E2E Test
on: 
  schedule:
    - cron: '0 4 * * *'
  push:
  workflow_dispatch:

jobs:
  record:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          start: npm run start:app
          wait-on: 'http://localhost:3000'
          browser: replay-chromium
          wait-on-timeout: 120
        env:
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY_METADATA_FILE: /tmp/replay-metadata
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          # These two are here to help with measuring the true overhead by disabling diagnostics
          RECORD_REPLAY_DISABLE_ASSERTS: 1
          RECORD_REPLAY_DISABLE_SOURCEMAP_COLLECTION: 1
      - name: Parse test run duration
        id: set_var
        if: always()
        run: |
          content=`cat duration.json`
          echo "::set-output name=duration::$content"
      - name: Set upload start
        if: always()
        id: uploadStart
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT
      - name: Upload replays
        if: ${{ always() }}
        uses: replayio/action-upload@v0.4.7
        with:
          api-key: rwk_xxNF2q8coRNanmtYmhmzyvHZM7KQ2VvW8CuMGJwhPUJ
          public: true
      - name: Set duration in output
        if: always()
        id: end
        run: | 
          echo "recordDuration=${{fromJson(steps.set_var.outputs.duration)}}" >> $GITHUB_OUTPUT
          echo "uploadDuration=$(((`date +%s` - ${{ steps.uploadStart.outputs.time }}) * 1000))" >> $GITHUB_OUTPUT
